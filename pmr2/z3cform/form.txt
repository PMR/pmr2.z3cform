PMR2 Forms
==========

Forms in PMR2 are built on top of z3c.forms.  There are certain changes
we made to allow this library to better fit into our use cases.

One change is the enforcement of request method.  First we import some
base classes and create a test form class.
::

    >>> import zope.interface
    >>> import zope.schema
    >>> import z3c.form.field
    >>> from pmr2.testing.base import TestRequest
    >>> from pmr2.z3cform.form import AddForm
    >>>
    >>> class IDummy(zope.interface.Interface):
    ...     id = zope.schema.DottedName(title=u'id')
    ...
    >>> class Dummy(object):
    ...     zope.interface.implements(IDummy)
    ...     def __init__(self, id_):
    ...         self.id = id_
    ...
    >>> class TestAddForm(AddForm):
    ...     fields = z3c.form.field.Fields(IDummy)
    ...     def create(self, data):
    ...         return Dummy(data['id'])
    ...     def add_data(self, ctxobject):
    ...         ctxobject.id = self._data['id']
    ...     def add(self, obj):
    ...         self.context.append(obj)
    ...     def nextURL(self):
    ...         return ''  # unnecessary.

Now we test that GET will fail.
::

    >>> context = []
    >>> request = TestRequest(form={
    ...     'form.widgets.id': 'test',
    ...     'form.buttons.add': '1',
    ... })
    >>> request.method = 'GET'
    >>> form = TestAddForm(context, request)
    >>> result = form()
    Traceback (most recent call last):
    ...
    Unauthorized: Unauthorized()
    >>> context == []
    True

On the other hand, POST will work.
::

    >>> request.method = 'POST'
    >>> form = TestAddForm(context, request)
    >>> result = form()
    >>> print context[0].id
    test
